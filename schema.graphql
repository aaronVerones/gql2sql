type Author {
    id: Author_id!              # mandatory field
    name: String                # optional field
    books: [Book]               # Many-to-One relation
    address: Address            # One-to-One relation (fkey side)
}

type Author_id {
    x: Int!
    y: Int!
}

type Book {
    id: Int!
    title: String
    author: Author              # Many-to-One relation (fkey side)
    votes: Int
    categories: [Category]      # Many-to-Many relation
}

type Category {
    id: Int!
    name(default: String = "foo"): String
    books: [Book]               # Many-to-Many relation
}

type Address {
    id: Int!
    street: String
    city: String
    author: Author
}

# more complicated relations
# more column types

type Address {
    id: Int!
    street: String
}

extend type Address {
    city: String
    author: Author
}


type Mother {
    id: Int!
    foo: String!
}

type Father {
    id: Int!
    bar: String!
}

union Parent = Mother | Father

type Person {
    id: Int!
    parent: Parent!
}

# person table then has a mother_id and father_id field 